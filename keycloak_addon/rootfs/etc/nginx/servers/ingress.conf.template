server {
    listen 0.0.0.0:8099 default_server;
    server_name _;

    proxy_buffering        off;
    proxy_intercept_errors  on;
    recursive_error_pages   on;

    location / {
        proxy_pass         http://127.0.0.1:8080/;
        proxy_redirect     $scheme://$host/ $scheme://$http_host/__INGRESS_ENTRY__/;

        sub_filter_once off;
        sub_filter_types text/html text/css text/plain text/javascript application/javascript;

        sub_filter 'href="/' 'href="/__INGRESS_ENTRY__/';
        sub_filter 'src="/' 'src="/__INGRESS_ENTRY__/';

        sub_filter 'authServerUrl+"/realms' 'authServerUrl+"/__INGRESS_ENTRY__/realms';
        sub_filter 'authServerUrl+"realms' 'authServerUrl+"__INGRESS_ENTRY__/realms';
        # sub_filter '"resourceUrl": "/resources/' '"resourceUrl": "__INGRESS_ENTRY__/resources/';
        # sub_filter '"consoleBaseUrl": "/admin/' '"consoleBaseUrl": "__INGRESS_ENTRY__/admin/';
        sub_filter '"serverBaseUrl": "http://$host' '"serverBaseUrl": "http://$host/__INGRESS_ENTRY__';
        #         "serverBaseUrl": "http://192.168.1.70",
        #         "adminBaseUrl": "http://192.168.1.70",

        proxy_set_header   Host $host;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection $connection_upgrade;
    }
}
    #     findEffectiveMessageBundles = this.makeRequest({
#         method: "GET",
#         path: "/resources/{realm}/{themeType}/{locale}",
#         urlParamKeys: ["realm", "themeType", "locale"],
#         queryParamKeys: ["theme", "source"]
#     })